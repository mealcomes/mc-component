@use 'sass:map';

@use 'mixins/mixins' as *;
@use 'mixins/_var' as *;
@use 'mixins/function' as *;
@use 'common/var' as *;

@include b(checkbox-wrapper) {
    @include set-component-css-var('checkbox', $checkbox);
}

@include b(checkbox-wrapper) {
    position: relative;
    display: inline-flex;
    align-items: center;
    user-select: none;
    color: getCssVar('checkbox-text-color');
    font-size: getCssVar('checkbox-font-size');
    cursor: pointer;
    transition: getCssVar('transition-color');

    input[type='checkbox'] {
        margin: 0;
        width: 0;
        height: 0;
    }

    @include when(disabled) {
        cursor: not-allowed;
        color: getCssVar('disabled-text-color');
    }

    @include b(checkbox) {
        position: relative;
        padding: 0;
        margin: 0;
        width: 1em;
        height: 1em;
        border-radius: getCssVar('checkbox-border-radius');
        border: getCssVar('border');

        @include m(inner) {
            position: absolute;
            padding: 0;
            width: 1em;
            height: 1em;
            border-radius: getCssVar('checkbox-border-radius');
            opacity: 0;
        }

        @include when(checked) {
            border-color: getCssVar('color-primary');
            background-color: getCssVar('checkbox-checked-bg-color');
            &::before {
                content: '';
                position: absolute;
                width: calc(1em + 2 * getCssVar('border-width'));
                height: calc(1em + 2 * getCssVar('border-width'));
                left: calc(0px - getCssVar('border-width'));
                top: calc(0px - getCssVar('border-width'));
                border-radius: 3px;
                opacity: 0;
                background-color: getCssVar('checkbox-checked-bg-color');
                animation: border-appear 0.2s ease-in both;
            }
            .#{$namespace}-checkbox#{$modifier-separator}inner {
                opacity: 1;
                &::before {
                    content: '';
                    position: absolute;
                    width: calc(5em / 8);
                    height: calc(3em / 8);
                    left: calc(50% - 5em / 16);
                    top: calc(50% - 4em / 16);
                    box-sizing: border-box;
                    border-style: getCssVar('border-style');
                    border-color: transparent transparent
                        getCssVar('checkbox-checked-icon-color')
                        getCssVar('checkbox-checked-icon-color');
                    border-width: 0 0 2px 2px;
                    transform: rotate(-45deg);
                    animation: point-appear 0.1s ease-in 0.1s backwards;
                }
            }
        }

        @include when(indeterminate) {
            background-color: getCssVar('checkbox-indeterminate-bg-color');
            border: getCssVar('border');
            .#{$namespace}-checkbox#{$modifier-separator}inner {
                opacity: 1;
                &::after {
                    content: '';
                    position: absolute;
                    width: calc(5em / 8);
                    height: calc(5em / 8);
                    left: calc(50% - 5em / 16);
                    top: calc(50% - 5em / 16);
                    box-sizing: border-box;
                    background-color: getCssVar(
                        'checkbox-indeterminate-icon-color'
                    );
                    animation: square-appear 0.1s ease-in 0.1s backwards;
                }
            }
        }

        @include when(disabled) {
            pointer-events: none;
            border-color: getCssVar('disabled-border-color');
            background-color: getCssVar('disabled-bg-color');
            .#{$namespace}-checkbox#{$modifier-separator}inner {
                &::before {
                    border-color: transparent transparent
                        getCssVar('checkbox-disabled-checked-icon-color')
                        getCssVar('checkbox-disabled-checked-icon-color');
                }
                &::after {
                    background-color: getCssVar(
                        'checkbox-disabled-indeterminate-icon-color'
                    );
                }
            }
            &::before {
                animation: none;
            }
        }
    }

    &:hover {
        :not(.is-disabled).#{$namespace}-checkbox {
            border-color: getCssVar('checkbox-hover-border-color');
        }
    }

    span {
        padding: 0 5px;
    }
}

@keyframes point-appear {
    0% {
        transform: rotate(-45deg) scale(0);
        opacity: 0;
    }
    70% {
        transform: rotate(-45deg) scale(1.2);
        opacity: 1;
    }
    100% {
        transform: rotate(-45deg) scale(1);
        opacity: 1;
    }
}

@keyframes square-appear {
    0% {
        transform: scale(0);
        opacity: 0;
    }
    70% {
        transform: scale(1.2);
        opacity: 1;
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

@keyframes border-appear {
    0% {
        transform: scale(1);
        opacity: 1;
    }
    100% {
        transform: scale(1.4);
        opacity: 0;
    }
}
