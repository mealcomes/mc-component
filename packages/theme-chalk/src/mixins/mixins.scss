@use 'config' as *;
@forward 'config';

// .m-button {}
// @include b(button) {
//      color: red;
// }
// 会得到
// .m-button { color: red; }
@mixin b($block) {
    $B: $namespace + '-' + $block;
    .#{$B} {
        @content;
    }
}

// .m-button.is-xxx
@mixin when($state) {
    @at-root {
        &.#{$state-prefix + $state} {
            @content;
        }
    }
}

// &primary => .m-button--primary
@mixin m($modifier) {
    @at-root {
        #{& + $modifier-separator + $modifier} {
            @content;
        }
    }
}

// &header => .z-button__header
@mixin e($element) {
    @at-root {
        #{& + $element-separator + $element} {
            @content;
        }
    }
}

@mixin button-states($base-color) {
    background-color: $base-color;
    border-color: $base-color;

    &:hover {
        background-color: lighten($base-color, 8%);
        border-color: lighten($base-color, 8%);
    }

    &:active {
        background-color: darken($base-color, 6%);
        border-color: darken($base-color, 6%);
    }

    &:disabled {
        background-color: lighten($base-color, 30%);
        border-color: lighten($base-color, 30%);
        color: rgba(#fff, 0.5);
        cursor: not-allowed;
        opacity: 0.6;
    }
}

@function color-state($base-color, $state) {
    @if $state == 'hover' {
        @return lighten($base-color, 8%);
    } @else if $state == 'active' {
        @return darken($base-color, 6%);
    } @else if $state == 'disabled' {
        @return mix($base-color, #fff, 60%);
    } @else {
        @return $base-color;
    }
}

@mixin dark($block) {
    html.dark {
        @include b($block) {
            @content;
        }
    }
}

// Scrollbar
@mixin scroll-bar {
    $scrollbar-thumb-background: getCssVar('text-color', 'disabled');
    $scrollbar-track-background: getCssVar('fill-color', 'blank');

    &::-webkit-scrollbar {
        z-index: 11;
        width: 6px;

        &:horizontal {
            height: 6px;
        }

        &-thumb {
            border-radius: 5px;
            width: 6px;
            background: $scrollbar-thumb-background;
        }

        &-corner {
            background: $scrollbar-track-background;
        }

        &-track {
            background: $scrollbar-track-background;

            &-piece {
                background: $scrollbar-track-background;
                width: 6px;
            }
        }
    }
}

@mixin inset-input-border($color, $important: false) {
    @if $important == true {
        box-shadow: 0 0 0 1px $color inset !important;
    } @else {
        box-shadow: 0 0 0 1px $color inset;
    }
}
